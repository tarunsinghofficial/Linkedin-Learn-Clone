{"version":3,"sources":["HeaderSegment.tsx"],"names":["getDefaultHeaderHeight","Header","HeaderBackButton","HeaderShownContext","HeaderTitle","React","Platform","StyleSheet","memoize","HeaderSegment","props","isParentHeaderShown","useContext","leftLabelLayout","setLeftLabelLayout","useState","undefined","titleLayout","setTitleLayout","handleTitleLayout","e","height","width","nativeEvent","layout","handleLeftLabelLayout","getInterpolatedStyle","styleInterpolator","current","next","headerHeight","progress","layouts","header","screen","title","leftLabel","insets","modal","onGoBack","headerTitle","headerLeft","left","headerBackImage","headerBackTitle","headerBackTitleVisible","OS","headerTruncatedBackTitle","headerBackAccessibilityLabel","headerBackTestID","headerBackAllowFontScaling","headerBackTitleStyle","headerTitleContainerStyle","headerLeftContainerStyle","headerRightContainerStyle","headerBackgroundContainerStyle","headerStyle","customHeaderStyle","headerStatusBarHeight","top","rest","defaultHeight","flatten","titleStyle","leftButtonStyle","leftLabelStyle","rightButtonStyle","backgroundStyle","backImage","accessibilityLabel","testID","allowFontScaling","onPress","label","truncatedLabel","labelStyle","onLabelLayout","screenLayout","canGoBack","Boolean","onLayout"],"mappings":"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","sourcesContent":["import {\n  getDefaultHeaderHeight,\n  Header,\n  HeaderBackButton,\n  HeaderBackButtonProps,\n  HeaderShownContext,\n  HeaderTitle,\n} from '@react-navigation/elements';\nimport * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport type {\n  Layout,\n  SceneProgress,\n  StackHeaderOptions,\n  StackHeaderStyleInterpolator,\n} from '../../types';\nimport memoize from '../../utils/memoize';\n\ntype Props = StackHeaderOptions & {\n  layout: Layout;\n  title: string;\n  insets: EdgeInsets;\n  modal: boolean;\n  onGoBack?: () => void;\n  progress: SceneProgress;\n  styleInterpolator: StackHeaderStyleInterpolator;\n};\n\nexport default function HeaderSegment(props: Props) {\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  const [leftLabelLayout, setLeftLabelLayout] =\n    React.useState<Layout | undefined>(undefined);\n\n  const [titleLayout, setTitleLayout] =\n    React.useState<Layout | undefined>(undefined);\n\n  const handleTitleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setTitleLayout((titleLayout) => {\n      if (\n        titleLayout &&\n        height === titleLayout.height &&\n        width === titleLayout.width\n      ) {\n        return titleLayout;\n      }\n\n      return { height, width };\n    });\n  };\n\n  const handleLeftLabelLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      leftLabelLayout &&\n      height === leftLabelLayout.height &&\n      width === leftLabelLayout.width\n    ) {\n      return;\n    }\n\n    setLeftLabelLayout({ height, width });\n  };\n\n  const getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackHeaderStyleInterpolator,\n      layout: Layout,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      titleLayout: Layout | undefined,\n      leftLabelLayout: Layout | undefined,\n      headerHeight: number\n    ) =>\n      styleInterpolator({\n        current: { progress: current },\n        next: next && { progress: next },\n        layouts: {\n          header: {\n            height: headerHeight,\n            width: layout.width,\n          },\n          screen: layout,\n          title: titleLayout,\n          leftLabel: leftLabelLayout,\n        },\n      })\n  );\n\n  const {\n    progress,\n    insets,\n    layout,\n    modal,\n    onGoBack,\n    headerTitle: title,\n    headerLeft: left = onGoBack\n      ? (props: HeaderBackButtonProps) => <HeaderBackButton {...props} />\n      : undefined,\n    headerBackImage,\n    headerBackTitle,\n    headerBackTitleVisible = Platform.OS === 'ios',\n    headerTruncatedBackTitle,\n    headerBackAccessibilityLabel,\n    headerBackTestID,\n    headerBackAllowFontScaling,\n    headerBackTitleStyle,\n    headerTitleContainerStyle,\n    headerLeftContainerStyle,\n    headerRightContainerStyle,\n    headerBackgroundContainerStyle,\n    headerStyle: customHeaderStyle,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    styleInterpolator,\n    ...rest\n  } = props;\n\n  const defaultHeight = getDefaultHeaderHeight(\n    layout,\n    modal,\n    headerStatusBarHeight\n  );\n\n  const { height = defaultHeight } = StyleSheet.flatten(\n    customHeaderStyle || {}\n  ) as ViewStyle;\n\n  const {\n    titleStyle,\n    leftButtonStyle,\n    leftLabelStyle,\n    rightButtonStyle,\n    backgroundStyle,\n  } = getInterpolatedStyle(\n    styleInterpolator,\n    layout,\n    progress.current,\n    progress.next,\n    titleLayout,\n    headerBackTitle ? leftLabelLayout : undefined,\n    typeof height === 'number' ? height : defaultHeight\n  );\n\n  const headerLeft: StackHeaderOptions['headerLeft'] = left\n    ? (props) =>\n        left({\n          ...props,\n          backImage: headerBackImage,\n          accessibilityLabel: headerBackAccessibilityLabel,\n          testID: headerBackTestID,\n          allowFontScaling: headerBackAllowFontScaling,\n          onPress: onGoBack,\n          label: headerBackTitle,\n          truncatedLabel: headerTruncatedBackTitle,\n          labelStyle: [leftLabelStyle, headerBackTitleStyle],\n          onLabelLayout: handleLeftLabelLayout,\n          screenLayout: layout,\n          titleLayout,\n          canGoBack: Boolean(onGoBack),\n        })\n    : undefined;\n\n  const headerTitle: StackHeaderOptions['headerTitle'] =\n    typeof title !== 'function'\n      ? (props) => <HeaderTitle {...props} onLayout={handleTitleLayout} />\n      : (props) => title({ ...props, onLayout: handleTitleLayout });\n\n  return (\n    <Header\n      modal={modal}\n      layout={layout}\n      headerTitle={headerTitle}\n      headerLeft={headerLeft}\n      headerLeftLabelVisible={headerBackTitleVisible}\n      headerTitleContainerStyle={[titleStyle, headerTitleContainerStyle]}\n      headerLeftContainerStyle={[leftButtonStyle, headerLeftContainerStyle]}\n      headerRightContainerStyle={[rightButtonStyle, headerRightContainerStyle]}\n      headerBackgroundContainerStyle={[\n        backgroundStyle,\n        headerBackgroundContainerStyle,\n      ]}\n      headerStyle={customHeaderStyle}\n      headerStatusBarHeight={headerStatusBarHeight}\n      {...rest}\n    />\n  );\n}\n"]}